@page "/editgame";
@page "/editgame/{id:int}";

@inject NavigationManager NavigationManager;
@inject GamesClient GamesClient;
@inject GenresClient GenresClient;

<PageTitle>@_title</PageTitle>

<h3>@_title</h3>

@if (_genres is null || _game is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm Model="@_game" FormName="editGame" OnValidSubmit="HandleSubmit">
                @* Permits to add validation on data entry *@
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="name" class="form-label">Name:</label>
                    <InputText id="name" @bind-Value="_game.Name" class="form-control" />
                    <ValidationMessage For="() => _game.Name" />
                </div>
                <div class="mb-3">
                    <label for="genre" class="form-label">Genre:</label>
                    <InputSelect id="genre" @bind-Value="_game.GenreId" class="form-select">
                        <option value="">Select a genre</option>
                        @foreach (var genre in _genres)
                        {
                            <option value="@genre.Id">@genre.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => _game.GenreId" />
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Price:</label>
                    <InputNumber id="price" @bind-Value="_game.Price" class="form-control" />
                    <ValidationMessage For="() => _game.Price" />
                </div>
                <div class="mb-3">
                    <label for="releaseDate" class="form-label">Release date:</label>
                    <InputDate id="releaseDate" @bind-Value="_game.ReleaseDate" class="form-control" />
                </div>
                <button type="submit" class="btn btn-primary">Create Game</button>
                <a href="/" role="button" class="btn btn-secondary"> Cancel</a>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int? Id { get; set; }

    [SupplyParameterFromForm]
    private GameDetails? _game { get; set; }

    private Genre[]? _genres;

    private string _title = string.Empty;

    protected override void OnParametersSet()
    {
        if (_game is not null) return;

        if (Id is not null)
        {
            _game = GamesClient.GetGameDetailsById(Id.Value);
            _title = $"Edit {_game.Name}";
        }
        else
        {
            _game = new()
                {
                    Name = string.Empty,
                    ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
                };
            _title = "New Game";
        }
    }

    protected override void OnInitialized()
    {
        _genres = GenresClient.GetGenres();
    }

    private void HandleSubmit()
    {
        ArgumentNullException.ThrowIfNull(_game);

        if (Id is null)
        {
            GamesClient.AddGame(_game);
        }
        else
        {
            _game.Id = Id.Value;
            GamesClient.UpdateGame(_game);
        }

        NavigationManager.NavigateTo("/");
    }
}
